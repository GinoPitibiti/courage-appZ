// Service Worker simple pour g√©rer les notifications d'encouragement
// Ce SW permet de cliquer sur les notifications pour revenir √† l'app

console.log('üîß Service Worker charg√©');

// G√©rer les clics sur les notifications
self.addEventListener('notificationclick', (event) => {
    console.log('üëÜ Notification cliqu√©e:', event.notification.tag);

    // Fermer la notification
    event.notification.close();

    // Ouvrir ou ramener au premier plan l'app
    event.waitUntil(
        clients.matchAll({ type: 'window', includeUncontrolled: true })
            .then((clientList) => {
                // Chercher si l'app est d√©j√† ouverte
                for (let client of clientList) {
                    if (client.url.includes(self.location.origin) && 'focus' in client) {
                        console.log('‚úÖ App trouv√©e, focus sur:', client.url);
                        return client.focus();
                    }
                }

                // Si l'app n'est pas ouverte, l'ouvrir
                if (clients.openWindow) {
                    console.log('üöÄ Ouverture de l\'app');
                    return clients.openWindow('/');
                }
            })
    );
});

// G√©rer l'installation du Service Worker
self.addEventListener('install', (event) => {
    console.log('üì¶ Service Worker install√©');
    // Activer imm√©diatement
    self.skipWaiting();
});

// G√©rer l'activation du Service Worker
self.addEventListener('activate', (event) => {
    console.log('‚úÖ Service Worker activ√©');
    // Prendre le contr√¥le imm√©diatement
    event.waitUntil(clients.claim());
});
